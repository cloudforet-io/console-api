name: SpaceONE CI tag push
on:
  push:
    tags:
      - "**"
  workflow_dispatch:
jobs:
  initialize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: olegtarasov/get-tag@v2
        id: getTag

      - name: Set version
        run: |
          if [ ${{ steps.getTag.outputs.tag }} ]
          then
            echo "::set-env name=VERSION::${{ steps.getTag.outputs.tag }}"
          else
            echo "::set-env name=VERSION::${{ github.event.inputs.tag }}"
          fi
      - name: Set environment virables
        env:
          IMAGE_PREFIX: spaceone
          # LOCATION points the parent directory
          LOCATION_SETUP_PY: src # optional. for pypi upload
          LOCATION_VERSION: src # the location for VERSION file (ex- . means the location of VERSION is ./VERSION)
          LOCATION_DOCKERFILE: .

        run: |
          cat <<EOF>set_env.sh
          echo "::set-env name=SERVICE::$(cut -d'/' -f2 <<<${{github.repository}})"
          echo "::set-env name=IMAGE_PREFIX::$IMAGE_PREFIX"
          echo "::set-env name=LOCATION_SETUP_PY::$LOCATION_SETUP_PY"
          echo "::set-env name=LOCATION_VERSION::$LOCATION_VERSION"
          echo "::set-env name=LOCATION_DOCKERFILE::$LOCATION_DOCKERFILE"
          echo "::set-env name=VERSION::$VERSION"
          echo $VERSION>$LOCATION_VERSION/VERSION
          # LATEST_TAG true or false
          if [[ $VERSION =~ ^[0-9]\.[0-9]\.[0-9]$ ]];
          then
            echo "::set-env name=LATEST_TAG::true"
          else
            echo "::set-env name=LATEST_TAG::false"
          fi
          EOF
          bash set_env.sh
      - name: save envs
        uses: actions/upload-artifact@v2
        with:
          name: set_env.sh
          path: set_env.sh

      - run: |
          cat set_env.sh

  docker:
    if: github.repository_owner == 'spaceone-dev'
    needs: initialize
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: set_env.sh

      - name: Set environment variables
        run: |
          bash set_env.sh
      - name: "Upload docker - Option a. :latest, :${{ env.VERSION }}"
        if: env.LATEST_TAG == 'true'
        uses: docker/build-push-action@v1
        with:
          path: ${{ env.LOCATION_DOCKERFILE }}
          repository: ${{ env.IMAGE_PREFIX }}/${{ env.SERVICE }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: latest,${{ env.VERSION }}

      - name: "Upload docker - Option b. only :${{ env.VERSION }}"
        if: env.LATEST_TAG == 'false'
        uses: docker/build-push-action@v1
        with:
          path: ${{ env.LOCATION_DOCKERFILE }}
          repository: ${{ env.IMAGE_PREFIX }}/${{ env.SERVICE }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: ${{ env.VERSION }}

      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: Github Action Slack
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}