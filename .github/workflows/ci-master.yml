name: SpaceONE CI commit push
on:
  push:
    branches:
      - master
      - github-action
  workflow_dispatch:

jobs:
  initialize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set environment virables
        env:
          IMAGE_PREFIX: pyengine
          PYPI_UPLOAD: false # upload pypi if this is true
          DOCKER_UPLOAD: true
          # LOCATION points the parent directory
          LOCATION_SETUP_PY: src # optional. for pypi upload
          LOCATION_VERSION: src # the location for VERSION file (ex- . means the location of VERSION is ./VERSION)
          LOCATION_DOCKERFILE: .

        run: |
          cat <<EOF>set_env.sh
          echo "::set-env name=SERVICE::$(cut -d'/' -f2 <<<${{github.repository}})"
          echo "::set-env name=IMAGE_PREFIX::$IMAGE_PREFIX"

          echo "::set-env name=PYPI_UPLOAD::$PYPI_UPLOAD"
          echo "::set-env name=DOCKER_UPLOAD::$DOCKER_UPLOAD"
          echo "::set-env name=LOCATION_SETUP_PY::$LOCATION_SETUP_PY"
          echo "::set-env name=LOCATION_VERSION::$LOCATION_VERSION"
          echo "::set-env name=LOCATION_DOCKERFILE::$LOCATION_DOCKERFILE"

          echo "::set-env name=VERSION::$(cat $LOCATION_VERSION/VERSION).${{ github.run_id }}"
          echo "$(cat $LOCATION_VERSION/VERSION).${{ github.run_id }}">$LOCATION_VERSION/VERSION
          EOF

          bash set_env.sh
      - name: save envs
        uses: actions/upload-artifact@v2
        with:
          name: set_env.sh
          path: set_env.sh

      - run: |
          cat set_env.sh

      - name: Clone master branch
        uses: actions/checkout@v2
        with:
          ref: master
          path: master_branch

      - name: Compare version
        run: |
          echo "MASTER BRANCH VERSION"
          cat master_branch/$LOCATION_VERSION/VERSION
          echo -e "\n\n"

          echo "PR VERSION"
          cat $LOCATION_VERSION/VERSION
          echo -e "\n\n"

          echo "::set-env name=IS_NEW_VERSION::false"
          cmp --silent master_branch/$LOCATION_VERSION/VERSION $LOCATION_VERSION/VERSION || \
          echo "::set-env name=IS_NEW_VERSION::true"
  pypi:
    if: github.repository_owner == 'spaceone-dev'
    needs: initialize
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: set_env.sh
      - run: |
          echo temp

      - name: Set environment variables
        run: |
          bash set_env.sh

      - name: Set up Python
        if: env.PYPI_UPLOAD == 'true'
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        if: env.PYPI_UPLOAD == 'true'
        run: |
            python -m pip install --upgrade pip
            pip install setuptools wheel twine

      - name: Build
        if: env.PYPI_UPLOAD == 'true'
        run: |
          cd $LOCATION_SETUP_PY
          python setup.py sdist bdist_wheel

      - name: Upload Pypi
        if: env.PYPI_UPLOAD == 'true'
        id: upload
        run: |
          cd $LOCATION_SETUP_PY
          twine upload dist/*.whl --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }} --verbose

      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: Github Action Slack
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}

  docker:
    if: github.repository_owner == 'spaceone-dev'
    needs: initialize
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: set_env.sh

      - name: Set environment variables
        run: |
          bash set_env.sh

      - name: Upload docker
        if: env.DOCKER_UPLOAD == 'true'
        uses: docker/build-push-action@v1
        with:
          repository: ${{ env.IMAGE_PREFIX }}/${{ env.SERVICE }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: latest,${{ env.VERSION }}
      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: Github Action Slack
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}